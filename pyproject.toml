[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "ragdiff"
version = "0.1.0"
description = "A flexible framework for comparing RAG systems side-by-side with LLM evaluation"
readme = "README.md"
requires-python = ">=3.9.2"
license = {text = "MIT"}
authors = [
    {name = "Ansari Project"},
]
keywords = ["rag", "comparison", "evaluation", "diff", "llm"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
dependencies = [
    "typer>=0.9.0",
    "pyyaml>=6.0",
    "python-dotenv>=1.0.0",
    "rich>=13.0.0",
    "anthropic>=0.25.0",
    "requests>=2.31.0",
    "goodmem-client>=1.5.5",
    "markdown>=3.9",
    "agentset>=0.4.0",
]

[project.optional-dependencies]
goodmem = [
    "goodmem-client>=0.1.0",
]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "ruff>=0.1.0",
    "pre-commit>=3.5.0",
]

[project.scripts]
rag-compare = "src.cli:app"

[project.urls]
Homepage = "https://github.com/ansari-project/ragdiff"
Issues = "https://github.com/ansari-project/ragdiff/issues"

[tool.hatch.build.targets.wheel]
packages = ["src"]

[tool.ruff]
line-length = 88
target-version = "py39"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long (handled by formatter)
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
    "E402",  # module level import not at top (intentional in goodmem.py for SSL warnings)
]

[tool.ruff.lint.isort]
known-first-party = ["src"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
line-ending = "auto"

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers"
testpaths = ["tests"]
pythonpath = ["src"]

[tool.coverage.run]
source = ["src"]
branch = true

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false

[dependency-groups]
dev = [
    "psutil>=7.1.1",
    "types-markdown>=3.9.0.20250906",
]
